@using Garage2._0._1.Models
@model ParkVehicleViewModel

@{
    ViewBag.Title = "Park a Vehicle";
    ViewBag.RegNrTaken = false;
}

<h2>ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Enter the Vehicle data</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @if (!Model.MemberFound && Model.Post)
        {
            <h2>The user @Model.Member.FirstName @Model.Member.LastName is not Registerered in the Database</h2>
            <h2>Register as a member before parking in the garage</h2>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Member.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Member.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Member.FirstName, "", new { @class = "text-danger" })
            </div>  
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Member.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Member.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Member.LastName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ParkedVehicle.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParkedVehicle.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParkedVehicle.RegistrationNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParkedVehicle.VehicleType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.VehicleTypeSelectList, new { @class = "form-control" })*@
                @*@Html.DropDownList("VehicleTypeId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.SelectedVehicleTypeId,  new SelectList( Model.VehicleTypeSelectList, "Id", "Type") , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ParkedVehicle.VehicleType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParkedVehicle.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParkedVehicle.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParkedVehicle.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParkedVehicle.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParkedVehicle.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParkedVehicle.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParkedVehicle.Wheels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParkedVehicle.Wheels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParkedVehicle.Wheels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
