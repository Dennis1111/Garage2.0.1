@model IEnumerable<Garage2._0._1.Models.ParkedVehicle>
@{
    ViewBag.Title = "Index";
    Garage2._0._1.Models.SearchFormModel info = ViewBag.SearchFormModel;
}

<h2>Parking Instructions</h2>
<p>
    To limit the search list enter a search name and press search.
    By default sorting is done on registration number and in Ascending order
    Press another column so sort on that vehicle feature.
    Press same column again to toggle the sort order.
</p>

<p>
    @Html.ActionLink("Park a car", "Create")
</p>

@using (Html.BeginForm("Index", "ParkedVehicles", FormMethod.Get))
{
    <label>Search on a vehicle feature</label>
    <input type="hidden" value=@ViewBag.Ascending name="ascending" id="sorting">
    <input type="text" id="searchName" name="searchName" value=@ViewBag.SearchName>
    <input type="submit" id="submitId" value="Search" class="btn btn-default" />
    <label>Current vehicle column</label>    
    <input type="text" value=@ViewBag.Column name="column" id="coulumn">    
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Registration number", "Index", new { ascending = ViewBag.Ascending, searchName = ViewBag.SearchName, column = "RegistrationNumber" })
        </th>
        <th>
            @Html.ActionLink("Type", "Index", new { ascending = ViewBag.Ascending, searchName = ViewBag.SearchName, column = "Type" })

        </th>
        <th>
            @Html.ActionLink("Color", "Index", new { ascending = ViewBag.Ascending, searchName = ViewBag.SearchName, column = "Color" })

        </th>
        <th>
            @Html.ActionLink("Brand", "Index", new { ascending = ViewBag.Ascending, searchName = ViewBag.SearchName, column = "Brand" })
        </th>
        <th>
            @Html.ActionLink("Wheels", "Index", new { ascending = ViewBag.Ascending, searchName = ViewBag.SearchName, column = "Wheels" })
        </th>
        <th>
            @Html.ActionLink("Date", "Index", new { ascending = ViewBag.Ascending, searchName = ViewBag.SearchName, column = "Date" })
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RegistrationNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Wheels)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParkingTime)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.RegistrationNumber }) |
                @Html.ActionLink("Details", "Details", new { id = item.RegistrationNumber }) |
                @Html.ActionLink("Checkout", "Delete", new { id = item.RegistrationNumber })
            </td>
        </tr>
    }
</table>

<script>
    function hrefParams(ascending, column) {
        var search = document.getElementById("searchName").value;
        alert(search, ascending, column);
        link = '/ParkedVehicles?ascending=' + ascending + '&searchName=' + search + '&column=' + column;
        alert(link);
        return link;
    }

    function test(value, viewBag) {
        viewBag.SearchName = value;
        var search = document.getElementById("searchName").value;
        alert(search, ascending, column, value);
        // onclick event is assigned to the #button element.
        return document.getElementById("searchName").innerText;
    }
</script>
