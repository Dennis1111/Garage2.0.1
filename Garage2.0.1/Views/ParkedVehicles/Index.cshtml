@using Garage2._0._1.Models
@model ParkedVehiclesViewModel
@{
    ViewBag.Title = "Index";
    ViewBag.MemberExists = true;
}

<h2>Parking Instructions</h2>
<p>
    To limit the search list enter a search name and press search.
    By default sorting is done on registration number and in Ascending order
    Press another column so sort on that vehicle feature.
</p>

<p>
    @Html.ActionLink("Park a car", "Create")
</p>

@using (Html.BeginForm("Index", "ParkedVehicles", FormMethod.Post, new { @class = "form-inline" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" value=@Model.SortOrder name="SortOrder" id="SortOrder">
    <div class="form-group">
        <label for="test">Search:</label>
        <input type="text" id="SearchName" name="SearchName" value=@Model.SearchName>
    </div>
    <div class="form-group">
        <label for="test">Column:</label>
        @Html.DropDownListFor(e => e.SelectedColumn, Model.ColumnSelectList, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label for="test">Sort Order:</label>
        @Html.DropDownListFor(e => e.SelectedSorting, Model.SortingSelectList, new { @class = "form-control" })
    </div>
    <input type="submit" id="submitId" value="Search" class="btn btn-default" />
}

<table class="table">
    <tr>
        <th>
            <h2>Customer</h2>
            @*Html.ActionLink("Owner", "Index", new { ascending = ViewBag.Ascending, searchName = ViewBag.SearchName, column = "Owner" })*@
        </th>
        <th>
            <h2>Vehicle Type</h2>
            @*html.ActionLink("Vehicle Type", "Index", new { ascending = ViewBag.Ascending, searchName = ViewBag.SearchName, column = "Type" })*@
        </th>
        <th>
            <h2>Registration Number</h2>
            @*Html.ActionLink("Registration Number", "Index", new { ascending = ViewBag.Ascending, searchName = ViewBag.SearchName, column = "RegistrationNumber" })*@
        </th>
        <th>
            <h2>Date</h2>
            @*Html.ActionLink("Date", "Index", new { ascending = ViewBag.Ascending, searchName = ViewBag.SearchName, column = "Date" })*@
        </th>
    </tr>

    @foreach (var item in Model.ParkedVehicles)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Owner)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VehicleType.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegistrationNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParkingTime)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.RegistrationNumber }) |
                @Html.ActionLink("Details", "Details", new { id = item.RegistrationNumber }) |
                @Html.ActionLink("Checkout", "Delete", new { id = item.RegistrationNumber })
            </td>
        </tr>
    }
</table>

<script>
    function hrefParams(ascending, column) {
        var search = document.getElementById("searchName").value;
        alert(search, ascending, column);
        link = '/ParkedVehicles?ascending=' + ascending + '&searchName=' + search + '&column=' + column;
        alert(link);
        return link;
    }

    function test(value, viewBag) {
        viewBag.SearchName = value;
        var search = document.getElementById("searchName").value;
        alert(search, ascending, column, value);
        // onclick event is assigned to the #button element.
        return document.getElementById("searchName").innerText;
    }
</script>
